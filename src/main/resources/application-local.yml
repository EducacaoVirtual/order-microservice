server:
  port: 8083
  address: 0.0.0.0

spring:
  application:
    name: order-api

  datasource:
    #Primary connection to read/write data
    main:
      url: jdbc:postgresql://172.21.0.8:6432/orderapi
      username: postgres
      password: educacaovirtual2025
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 100
        minimum-idle: 10
        idle-timeout: 10000
        max-lifetime: 1800000
        pool-name: order-api-primary-pool
        leak-detection-threshold: 15000
        auto-commit: false
        connection-test-query: "SELECT 1;"

    #Primary connection to read/write data
    replica:
      url: jdbc:postgresql://172.21.0.8:6432/orderapi_replica
      username: postgres
      password: educacaovirtual2025
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 100
        minimum-idle: 10
        idle-timeout: 10000
        max-lifetime: 1800000
        pool-name: order-api-replica-pool
        leak-detection-threshold: 15000
        auto-commit: false
        connection-test-query: "SELECT 1;"

    jpa:
      hibernate:
        ddl-auto: update
        dialect: org.hibernate.dialect.PostgreSQLDialect
      show-sql: true
      database-platform: org.hibernate.dialect.PostgreSQLDialect

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
      base-path: "/actuator"
  endpoint:
    health:
      enabled: true
      show-details: always
    prometheus:
      enabled: true

logging:
  file:
    name: /logs/order-api.log
  level:
    root: INFO
    org.springframework.boot.actuate: DEBUG